#include "PlayGameState.h"
#include "../images/Images.h"
#include "../utils/CardUtils.h"


// ----------------------------------------------------------------------------
//  Initialise state ..
//
void PlayGameState::activate(StateMachine & machine) {

	auto & arduboy = machine.getContext().arduboy;
	auto & gameStats = machine.getContext().gameStats;

	resetHand(machine);

	this->cribState = CribState::Empty;

									
// ---------------------------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------------



// 	auto & player1 = gameStats.player1;
// 	auto & player2 = gameStats.player2;

// //4 x3
// 	player1.addToHand(2);
// 	player1.addToHand(15);
// 	player1.addToHand(28);
// 	player1.addToHand(41);
// this->turnUp = 24;

// 5,5,6,7,7
// player1.addToHand(17);
// player1.addToHand(30);
// player1.addToHand(19);
// player1.addToHand(32);
// this->turnUp = 44;

// Run of 4
// player1.addToHand(2);
// player1.addToHand(3);
// player1.addToHand(4);
// player1.addToHand(5);
// this->turnUp = 48;

// // Run of 5
// player1.addToHand(2);
// player1.addToHand(3);
// player1.addToHand(4);
// player1.addToHand(5);
// this->turnUp = 6;

					// player1.calculateHandScore(gameStats.scores, this->turnUp);

					// for (uint8_t x=0; x < 10; x++) {
					// 	Score score = gameStats.scores[x];
					// 	for (uint8_t y=0; y < 5; y++) {
					// 		CardUtils::printCard(score.getHand(y));
					// 		Serial.print(" ");
					// 	}
					// 		Serial.print(" (S");
					// 		Serial.print(score.getScore());
					// 		Serial.print(" ,T");
					// 		Serial.print((uint8_t)score.getType());
					// 		Serial.println(")");
					// }


// ---------------------------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------------------



}

